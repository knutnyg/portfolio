import Foundation
import BrightFutures
import CSwiftV
import Result

class HistoricalDataFetcherMock: HistoricalDataFetcher {

    let resNAS = "Date,Open,High,Low,Close,Volume,Adj Close\n2016-03-04,299.30,310.00,291.80,309.20,591500,309.20\n2016-03-03,286.40,298.00,286.00,298.00,519900,298.00\n2016-03-02,289.20,290.00,282.70,283.50,174700,283.50\n2016-03-01,287.60,292.00,283.00,285.10,250700,285.10\n2016-02-29,288.60,290.80,285.20,287.00,191200,287.00\n2016-02-26,285.00,294.00,282.00,292.00,334000,292.00\n2016-02-25,275.50,283.50,275.00,280.00,269700,280.00\n2016-02-24,274.00,276.50,265.40,269.50,172200,269.50\n2016-02-23,275.10,279.70,274.00,275.40,124600,275.40\n2016-02-22,273.00,277.60,272.50,277.40,199000,277.40"
    let resNOD = "Date,Open,High,Low,Close,Volume,Adj Close\n2016-03-04,44.99,46.22,44.40,45.82,542200,45.82\n2016-03-03,44.76,45.00,44.10,44.58,199800,44.58\n2016-03-02,45.95,46.37,43.98,44.09,249300,44.09\n2016-03-01,45.49,46.50,44.28,44.97,322000,44.97\n2016-02-29,43.21,45.70,43.19,45.30,442100,45.30\n2016-02-26,42.25,43.19,42.25,43.02,221900,43.02\n2016-02-25,41.97,42.70,41.81,42.13,395500,42.13\n2016-02-24,43.70,43.86,41.05,41.22,441300,41.22\n2016-02-23,44.30,44.47,42.80,43.70,538500,43.70\n2016-02-22,45.30,46.30,44.31,44.52,576500,44.52\n2016-02-19,43.33,45.20,43.33,45.00,467600,45.00\n2016-02-18,43.40,44.72,42.81,43.81,891100,43.81\n2016-02-17,40.58,42.99,40.58,42.75,788500,42.75\n2016-02-16,42.78,43.31,41.07,41.46,437600,41.46\n2016-02-15,41.85,43.30,41.27,41.95,628600,41.95"


    override func getHistoricalData(stock: Stock) -> Future<StockHistory, NSError> {

        let promise = Promise<StockHistory, NSError>()

        var res = ""

        if stock.ticker == "NAS.OL" {
            res = resNAS
        } else if stock.ticker == "NOD.OL" {
            res = resNOD
        }

        Queue.global.async {
            let csv = CSwiftV(String: res)
            let stockHistory = StockHistory(history: self.t(csv.keyedRows!))
            promise.success(stockHistory)
        }

        return promise.future
    }
}
